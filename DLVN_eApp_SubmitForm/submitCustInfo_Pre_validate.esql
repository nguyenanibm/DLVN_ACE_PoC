CREATE COMPUTE MODULE submitCustInfo_Pre_validate
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		DECLARE datasource CHARACTER;
--		SET datasource = getUserDefPol('datasources','mssql');
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialID) = '' THEN
			SET Environment.Variables.DBData.Action = 'PotentialCustomer';
		ELSE
			SET Environment.Variables.DBData.Action = 'UpdateCustomer';
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Income) = '' THEN
			SET Environment.Variables.DBData.Income = '0';
		ELSE
			SET Environment.Variables.DBData.Income = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Income);
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherIncome) = '' THEN
			SET Environment.Variables.DBData.OtherIncome = '0';
		ELSE
			SET Environment.Variables.DBData.OtherIncome = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherIncome);
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsTaxAmerican) = '' THEN
			SET Environment.Variables.DBData.IsTaxAmerican = 0;
		ELSE
			SET Environment.Variables.DBData.IsTaxAmerican = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsTaxAmerican);
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsCompany) = '' THEN
			SET Environment.Variables.DBData.IsCompany = 0;
		ELSE
			SET Environment.Variables.DBData.IsCompany = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsCompany);
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.isPOAddress) = '' THEN
			SET Environment.Variables.DBData.IsPOAddress = 0;
		ELSE
			SET Environment.Variables.DBData.IsPOAddress = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.isPOAddress);
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsOtherAddress) = '' THEN
			SET Environment.Variables.DBData.IsOtherAddress = 0;
		ELSE
			SET Environment.Variables.DBData.IsOtherAddress = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsOtherAddress);
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsLIS) = '' THEN
			SET Environment.Variables.DBData.IsLIS = 0;
		ELSE
			SET Environment.Variables.DBData.IsLIS = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsLIS);
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.isPOAddress) = 1 THEN
--			CALL getCustomerPO(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID));
			SET Environment.Variables.DBResults.CustomerPO[] = 
				(SELECT T.PotentialID, T.PotentialType, T.Address, T.AddressCode FROM Database.EAPPSQL1.dbo.eApp_tbPotentialCustomer AS T
				  WHERE T.ProposalID = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID) 
				    AND T.PotentialType = 'PO');
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Project) = '' THEN
			SET Environment.Variables.Request.JSON.Data.jsonDataInput.Project = 'magp';
--			SET OutputRoot.JSON.Data.Response.Project = 'magp';
		END IF;
		
		IF FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.FullName) = '' THEN
			SET OutputRoot.JSON.Data.Response.Result = 'false';
			SET OutputRoot.JSON.Data.Response.ErrLog = 'EMPTY';
			SET Environment.Variables.RouteName = 'RETURN';
			PROPAGATE TO LABEL 'RETURN';
		END IF;
		
--		CALL getProposalInfo(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID));
		SET Environment.Variables.DBResults.ProposalInfo[] = 
			(SELECT T.ProposalNo, T.Status FROM Database.EAPPSQL1.dbo.eApp_tbProposal AS T
			  WHERE T.ProposalID = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID));

		IF FIELDVALUE(Environment.Variables.DBResults.ProposalInfo[1].Status) = 'Initial' THEN
			SET OutputRoot.JSON.Data.Response.Result = 'false';
			SET OutputRoot.JSON.Data.Response.ErrLog = 'EMPTY';
			SET Environment.Variables.RouteName = 'RETURN';
			PROPAGATE TO LABEL 'RETURN';
		END IF;
		
--		CALL checkIDNumExists(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IDNum));
		SET Environment.Variables.DBResults.CliID[] = 
			(SELECT T.cli_id FROM Database.EAPPSQL2.dbo.tcli AS T
			  WHERE T.cli_id_num = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IDNum));

		CALL eApp_spSaveAppForm(
			FIELDVALUE(Environment.Variables.DBData.Action),
			CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID) AS INTEGER),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialType),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Relationship),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.FullName),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BirthDay),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BirthPlace),
			CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Age) AS INTEGER),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Gender),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IDNum),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Nationality),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Maturity),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Occupation),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OccupationDetail),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOcc),
			CAST(FIELDVALUE(Environment.Variables.DBData.Income) AS DECIMAL),
			CAST(FIELDVALUE(Environment.Variables.DBData.IsTaxAmerican) AS BOOLEAN),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.CellPhone),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.HomePhone),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BusinessPhone),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Email),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Address),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.AddressCode),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BusinessAddress),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BusinessAddressCode),
			CAST(FIELDVALUE(Environment.Variables.DBData.IsCompany) AS BOOLEAN),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BankAccount),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BankBranch),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOccDetail),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.TaxID),
			0,
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ClassSchool),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.School),
			CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherIncome) AS DECIMAL),
			CAST(FIELDVALUE(Environment.Variables.DBData.IsPOAddress) AS BOOLEAN),
			CAST(FIELDVALUE(Environment.Variables.DBData.IsOtherAddress) AS BOOLEAN),
			CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsSMS) AS BOOLEAN),
			FIELDVALUE(Environment.Variables.DBResults.cli_id),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OccupationCode),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOccCode),
			0,
			CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialID) AS INTEGER),
			CAST(FIELDVALUE(Environment.Variables.DBData.IsLIS) AS INTEGER),
			'',
			CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OccupationClassCurrent) AS INTEGER),
			CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOccupationClass) AS INTEGER),
			FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PositionFreeText),
			Environment.Variables.DBResults.PotentialID
		);
		
		IF FIELDVALUE(Environment.Variables.DBResults.PotentialID) < 0 THEN
			SET OutputRoot.JSON.Data.Response.Result = 'false';
			SET OutputRoot.JSON.Data.Response.ErrLog = 'Customer not saved successful';
			SET Environment.Variables.RouteName = 'RETURN';
			PROPAGATE TO LABEL 'RETURN';
		END IF;
		
--		CALL getCustomer(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID), FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialID));
		SET Environment.Variables.DBResults.Customer[] = 
			(select T.PotentialType from Database.EAPPSQL1.dbo.eApp_tbPotentialCustomer AS T
			  where T.PotentialID = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID)
			    and T.ProposalID = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialID));
		
--		CALL getElseSamePOLI(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID), FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialID));
		SET Environment.Variables.DBResults.CustomerPOLI[] = 
			(select T.PotentialID from Database.EAPPSQL1.dbo.eApp_tbPotentialCustomer AS T
			  where T.ProposalID = FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID)
			    and T.PotentialID <> FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialID)
			    and T.IsPOSameLI = 1
			    and T.PotentialType in ('PO', 'LI'));
		
		IF FIELDVALUE(Environment.Variables.DBResults.CustomerPOLI[1].PotentialID) <> ''
			AND FIELDVALUE(Environment.Variables.DBResults.Customer[1].PotentialType) IN ('LI','PO') THEN
			CALL eApp_spSaveAppForm(
				FIELDVALUE(Environment.Variables.DBData.Action),
				CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ProposalID) AS INTEGER),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PotentialType),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Relationship),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.FullName),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BirthDay),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BirthPlace),
				CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Age) AS INTEGER),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Gender),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IDNum),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Nationality),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Maturity),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Occupation),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OccupationDetail),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOcc),
				CAST(FIELDVALUE(Environment.Variables.DBData.Income) AS DECIMAL),
				CAST(FIELDVALUE(Environment.Variables.DBData.IsTaxAmerican) AS BOOLEAN),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.CellPhone),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.HomePhone),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BusinessPhone),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Email),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.Address),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.AddressCode),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BusinessAddress),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BusinessAddressCode),
				CAST(FIELDVALUE(Environment.Variables.DBData.IsCompany) AS BOOLEAN),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BankAccount),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.BankBranch),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOccDetail),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.TaxID),
				0,
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.ClassSchool),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.School),
				CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherIncome) AS DECIMAL),
				CAST(FIELDVALUE(Environment.Variables.DBData.IsPOAddress) AS BOOLEAN),
				CAST(FIELDVALUE(Environment.Variables.DBData.IsOtherAddress) AS BOOLEAN),
				CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.IsSMS) AS BOOLEAN),
				FIELDVALUE(Environment.Variables.DBResults.CliID),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OccupationCode),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOccCode),
				0,
				CAST(FIELDVALUE(Environment.Variables.DBResults.CustomerPOLI[1].PotentialID) AS INTEGER),
				CAST(FIELDVALUE(Environment.Variables.DBData.IsLIS) AS INTEGER),
				'',
				CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OccupationClassCurrent) AS INTEGER),
				CAST(FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.OtherOccupationClass) AS INTEGER),
				FIELDVALUE(Environment.Variables.Request.JSON.Data.jsonDataInput.PositionFreeText),
				Environment.Variables.DBResults.PotentialID
			);
		END IF;
		
		SET OutputRoot.JSON.Data.Response.Result = 'true';
		SET OutputRoot.JSON.Data.Response.ErrLog = 'Submit Customer is saved successfull.';
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE eApp_spSaveAppForm (
		IN p1 CHARACTER, 
		IN p2 INTEGER, 
		IN p3 CHARACTER,
		IN p4 CHARACTER,
		IN p5 CHARACTER,
		IN p6 CHARACTER,
		IN p7 CHARACTER,
		IN p8 INTEGER,
		IN p9 CHARACTER,
		IN p10 CHARACTER,
		IN p11 CHARACTER, 
		IN p12 CHARACTER, 
		IN p13 CHARACTER,
		IN p14 CHARACTER,
		IN p15 CHARACTER,
		IN p16 DECIMAL,
		IN p17 BOOLEAN,
		IN p18 CHARACTER,
		IN p19 CHARACTER,
		IN p20 CHARACTER,
		IN p21 CHARACTER, 
		IN p22 CHARACTER, 
		IN p23 CHARACTER,
		IN p24 CHARACTER,
		IN p25 CHARACTER,
		IN p26 BOOLEAN,
		IN p27 CHARACTER,
		IN p28 CHARACTER,
		IN p29 CHARACTER,
		IN p30 CHARACTER,
		IN p31 INTEGER, 
		IN p32 CHARACTER, 
		IN p33 CHARACTER,
		IN p34 DECIMAL,
		IN p35 BOOLEAN,
		IN p36 BOOLEAN,
		IN p37 BOOLEAN,
		IN p38 CHARACTER,
		IN p39 CHARACTER,
		IN p40 CHARACTER,
		IN p41 INTEGER, 
		IN p42 INTEGER, 
		IN p43 INTEGER,
		IN p44 CHARACTER,
		IN p45 INTEGER,
		IN p46 INTEGER,
		IN p47 CHARACTER,
		INOUT p48 INTEGER
	)
	LANGUAGE DATABASE
	EXTERNAL NAME "dbo.eApp_spSaveAppForm";
END MODULE;
